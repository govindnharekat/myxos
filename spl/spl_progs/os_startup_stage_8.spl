load(7,1);			// Load exception handler from disk blocks 1 and 2 to memory pages 7 and 8 respectively
load(8,2);			//for halting the machine on excepion

load(23,17);			// Load interrupt 7 routine from disk bloks 17 and 18 to pages 23 and 24 respectively
load(24,18);			//for halting the machine on finishing execution

[READY_LIST + 0] = 0; 		// Sets the entry for PID as 0

load(25,21);	 		// Load 1st page of code from disk to memory
load(26,22);	 		// Load 2nd page of code from disk to memory
load(27,23);	 		// Load 3rd page of code from disk to memory
		 		// Stack is also there in page 28

PTBR = 1024;
PTLR = 4;

[PTBR + 0] = 25; 		// Physical Page Number for Logical Page 0
[PTBR + 1] = "01";		// Auxiliary Information for Logical Page 0
[PTBR + 2] = 26; 		// Physical Page Number for Logical Page 1
[PTBR + 3] = "01"; 		// Auxiliary Information for Logical Page 1
[PTBR + 4] = 27; 		// Physical Page Number for Logical Page 2
[PTBR + 5] = "01"; 		// Auxiliary Information for Logical Page 2
[PTBR + 6] = 28; 		// Physical Page Number for Logical Page 3
[PTBR + 7] = "01"; 		// Auxiliary Information for Logical Page 3

[READY_LIST + 1] = 2; 		// Sets the entry for STATE as Running

SP = 3 * 512;

[28 * 512] = 0; 		// Set up the IP value for INIT in the stack


load (5,19);			//loads FAT table from disk to memory
load (6,20);			//loads Disk Free List from Disk to Memory


alias counter S0;			
counter = 0;
while ( counter <  128) do			// 64 entries, each of size 2 words
	[ FILE_TABLE + counter + 0] = -1;	// Set FAT Index to -1
	[ FILE_TABLE + counter + 1] =  0;	// Set File Open Count to 0
	counter = counter + 2;			// Move to next entry
endwhile;	

counter = 0;
while (counter < 256) do
	[PAGE_TABLE + counter] = -1;
	[PAGE_TABLE + counter + 1] = -1;
	counter = counter + 2;
endwhile;

load (11, 5);			//loads Interrupt Routine 1
load (12, 6);			//loads Interrupt Routine 1

load (13, 7);			//loads Interrupt Routine 2
load (14, 8);			//loads Interrupt Routine 2

load (15, 9);			//loads Interrupt Routine 3
load (16, 10);		//loads Interrupt Routine 3

load (17, 11);		//loads Interrupt Routine 4
load (18, 12);		//loads Interrupt Routine 4

load (9, 3);			//loads TIMER Interrupt Routine
load (10, 4);			//loads TIMER Interrupt Routine

ireturn;

